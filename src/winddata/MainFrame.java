/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package winddata;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Johnny
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setLocationToMiddel();
    }
    /**
     * This routine sets the frame in the middle of the screen
     */
    private void setLocationToMiddel() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double screenWidth = screenSize.getWidth();
        double screenHeight = screenSize.getHeight();
        
        double frameWidth = getWidth();
        double frameHeight = getHeight();
        
        setLocation((int)(screenWidth - frameWidth) / 2, (int)(screenHeight - frameHeight) / 2);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectWindData = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pathLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectWindData.setText("Select KNMI Wind Data");
        selectWindData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectWindDataActionPerformed(evt);
            }
        });

        jLabel1.setText("Chosen File Path:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectWindData)
                        .addGap(0, 237, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectWindData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pathLabel))
                .addContainerGap(241, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
/**
 * This is called when the selectWindDataButton is pressed.
 * @param evt 
 */
    private void selectWindDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectWindDataActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Geef de locatie van het bestand");

        int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            System.out.println("Approve");
            
            File selectedFile = fileChooser.getSelectedFile();
            
            
            fileChosen(selectedFile);
            
        } else if (userSelection == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel");
        }

        
    }//GEN-LAST:event_selectWindDataActionPerformed
    /**
     * Is Called when there's a file choosen 
     * Checks if it is correct and sets pathlabel
     * @param chosenFile 
     */
    protected void fileChosen(File chosenFile) {
        try {
            boolean goodFile = checkForRightFile(chosenFile);
            
            if (goodFile) {
                pathLabel.setText(chosenFile.getPath());
                WindDataParser parser = new WindDataParser(chosenFile);
                parser.parse();
                System.out.println("44.5: " + parser.getCumulativeAtWindSpeed(24.5));
            }
            else {
                JOptionPane.showMessageDialog(this, "Selected File is not a KNMI Hydra Wind Data DISTRIBUTIVE RELATIVE file", "Incorrect file", JOptionPane.ERROR_MESSAGE);
            }
            
            
            
        } catch (FileNotFoundException ex) {
            System.err.println(ex.getMessage());
        } catch (IOException ex) {
            System.err.println(ex.getMessage());
        }
        
    }
    
    /**
     * Checks if file is a DISTRIBUTIVE RELATIVE
     * @param file the file to be checked
     * @return returns if it is DISTRIBUTIVE RELATIVE or not
     * @throws FileNotFoundException if the file is not found
     * @throws IOException if IOExcepetion has occured
     */
    protected boolean checkForRightFile(File file) throws FileNotFoundException, IOException{
        BufferedReader reader = new BufferedReader(new FileReader(file));
        String firstLine = reader.readLine();
        reader.close();
        return firstLine.contains("DISTRIBUTIVE RELATIVE");
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel pathLabel;
    private javax.swing.JButton selectWindData;
    // End of variables declaration//GEN-END:variables
}
